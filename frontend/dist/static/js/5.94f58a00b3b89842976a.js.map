{"version":3,"sources":["webpack:///src/components/HardwarkeyTest.vue","webpack:///./src/components/HardwarkeyTest.vue?f71d","webpack:///./src/components/HardwarkeyTest.vue","webpack:///./node_modules/cbor-js/cbor.js"],"names":["CBOR","__webpack_require__","HardwarkeyTest","data","status","methods","register","_this","this","_ref","$store","dispatch","common_module","url","then","asyncToGenerator_default","regenerator_default","a","mark","_callee2","pkCredCreateOpts","b64_ab","b64urlB64","ab_b64","challengeStr","credential","attestationObject","passableCredential","request","wrap","_context2","prev","next","inStr","Uint8Array","from","atob","c","charCodeAt","replace","repeat","length","buf","btoa","reduce","val","String","fromCharCode","user","id","challenge","console","log","navigator","credentials","create","publicKey","sent","decode","response","rawId","clientDataJSON","type","_ref2","_callee","rv","_context","stop","_x2","apply","arguments","catch","e","_x","validate","_this2","_ref3","_callee4","authnOptions","b64url_b64","_context4","allowCredentials","map","item","get","authenticatorData","signature","userHandle","_ref4","_callee3","_context3","_x4","_x3","components_HardwarkeyTest","render","_vm","_h","$createElement","_c","_self","on","click","$event","_v","_s","staticRenderFns","Component","normalizeComponent","__webpack_exports__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","undefined","POW_2_24","Math","pow","POW_2_32","POW_2_53","obj","encode","value","lastLength","ArrayBuffer","dataView","DataView","offset","ensureSpace","newByteLength","byteLength","requiredLength","oldDataView","uint32count","i","setUint32","getUint32","write","writeUint8","setUint8","writeUint8Array","writeTypeAndLength","setUint16","writeUint32","low","high","writeUint64","encodeItem","floor","setFloat64","writeFloat64","utf8data","charCode","push","Array","isArray","keys","Object","key","slice","ret","retView","getUint8","tagger","simpleValue","read","readArrayBuffer","readUint8","readUint16","getUint16","readUint32","readBreak","readLength","additionalInformation","readIndefiniteStringLength","majorType","initialByte","appendUtf16data","utf16data","decodeItem","tempArrayBuffer","tempDataView","sign","exponent","fraction","getFloat32","readFloat16","getFloat64","elements","fullArrayLength","fullArray","fullArrayOffset","set","retArray","retObject","call","exports","module"],"mappings":"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","file":"static/js/5.94f58a00b3b89842976a.js","sourcesContent":["<template>\r\n    <div>\r\n        <button @click=\"register()\">Register</button>\r\n        <button @click=\"validate()\">Validate</button>\r\n        <!-- <button @click=\"testB64()\">Test B64</button> -->\r\n        <pre> {{status}} </pre>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport { post } from '../core/module/common.module'\r\n// import { parseAuthData, bufToHex } from '../helper'\r\nconst CBOR = require('cbor-js')\r\nexport default {\r\n  data () {\r\n    return {\r\n      status: ''\r\n    }\r\n  },\r\n  methods: {\r\n    /* test function */\r\n    register () {\r\n      this.status = 'Start Register...'\r\n      var request = {\r\n        url: 'hardwarekey/register-key',\r\n        data: {}\r\n      }\r\n      this.$store\r\n        .dispatch(post, request)\r\n        .then(async (pkCredCreateOpts) => {\r\n          // eslint-disable-next-line camelcase\r\n          const b64_ab = (inStr) => Uint8Array.from(atob(inStr), c => c.charCodeAt(0)) // base64 encoded utf8\r\n          // eslint-disable-next-line no-useless-escape\r\n          const b64urlB64 = (inStr) => inStr.replace(/\\-/g, '+').replace(/_/g, '/') + '='.repeat((inStr.length % 4) ? 4 - (inStr.length % 4) : 0)\r\n\r\n          // eslint-disable-next-line camelcase\r\n          const ab_b64 = (buf) => btoa(buf.reduce((data, val) => data + String.fromCharCode(val), '')) // Uint8Array\r\n          pkCredCreateOpts.user.id = b64_ab(pkCredCreateOpts.user.id) // convert from base64 to ab\r\n          const challengeStr = pkCredCreateOpts.challenge // keep for later - base64url\r\n          pkCredCreateOpts.challenge = b64_ab(b64urlB64(pkCredCreateOpts.challenge))\r\n          console.log('challengeStr', challengeStr)\r\n\r\n          this.status = 'Awaiting PIN to Register...'\r\n\r\n          const credential = await navigator.credentials.create({\r\n            publicKey: pkCredCreateOpts // some info in the options come from backend\r\n          })\r\n          let attestationObject = await CBOR.decode(credential.response.attestationObject)\r\n          // let authData = parseAuthData(attestationObject.authData)\r\n          console.log(attestationObject)\r\n          // let aaguid = bufToHex(authData.aaguid)\r\n          // console.log('CredID: ', bufToHex(authData.credID))\r\n          // console.log('AAGUID: ', bufToHex(authData.aaguid))\r\n          // console.log('PublicKey', CBOR.decode(authData.COSEPublicKey.buffer))\r\n\r\n          const passableCredential = {\r\n            id: credential.id,\r\n            rawId: ab_b64(new Uint8Array(credential.rawId)),\r\n            response: {\r\n              clientDataJSON: ab_b64(new Uint8Array(credential.response.clientDataJSON)),\r\n              attestationObject: ab_b64(new Uint8Array(credential.response.attestationObject))\r\n            },\r\n            type: credential.type\r\n          }\r\n          // console.log(credential.response.attestationObject)\r\n          console.log('passableCredential', passableCredential)\r\n          \r\n          // console.log(response)\r\n          var request = {\r\n            url: 'hardwarekey/register',\r\n            data: {passableCredential: passableCredential, attestationObject: credential.response.attestationObject}\r\n          }\r\n          this.$store\r\n            .dispatch(post, request)\r\n            .then(async (rv) => {\r\n              console.log('rv', rv)\r\n              this.status = 'Register Pass...'\r\n            })\r\n            .catch((e) => {\r\n\r\n              // resolve(false)\r\n            })\r\n        })\r\n        .catch((e) => {\r\n\r\n          // resolve(false)\r\n        })\r\n    },\r\n    validate () {\r\n      this.status = 'start Validate...'\r\n      var request = {\r\n        url: 'hardwarekey/login-key',\r\n        data: {}\r\n      }\r\n      this.$store\r\n        .dispatch(post, request)\r\n        .then(async (authnOptions) => {\r\n          // eslint-disable-next-line camelcase\r\n          const b64_ab = (inStr) => Uint8Array.from(atob(inStr), c => c.charCodeAt(0)) // base64 encoded utf8\r\n          // eslint-disable-next-line camelcase\r\n          const b64url_b64 = (inStr) => inStr.replace(/\\-/g, '+').replace(/_/g, '/') + '='.repeat((inStr.length % 4) ? 4 - (inStr.length % 4) : 0)\r\n\r\n          // eslint-disable-next-line camelcase\r\n          const ab_b64 = (buf) => btoa(buf.reduce((data, val) => data + String.fromCharCode(val), '')) // Uint8Array\r\n          authnOptions.allowCredentials = authnOptions.allowCredentials.map(item => {\r\n            item.id = b64_ab(item.id)\r\n            return item\r\n          })\r\n\r\n          this.status = 'Awaiting PIN to Validate...'\r\n\r\n          authnOptions.challenge = b64_ab(b64url_b64(authnOptions.challenge))\r\n          const credential = await navigator.credentials.get({\r\n            publicKey: authnOptions // some info in the options come from backend\r\n          })\r\n          console.log('assert credential', credential)\r\n          \r\n          const passableCredential = {\r\n            id: credential.id,\r\n            rawId: ab_b64(new Uint8Array(credential.rawId)),\r\n            response: {\r\n              clientDataJSON: ab_b64(new Uint8Array(credential.response.clientDataJSON)),\r\n              authenticatorData: ab_b64(new Uint8Array(credential.response.authenticatorData)),\r\n              signature: ab_b64(new Uint8Array(credential.response.signature)),\r\n              userHandle: 'test' // credential.response.userHandle,\r\n            },\r\n            type: credential.type\r\n          }\r\n          console.log('assert passableCredential', passableCredential)\r\n\r\n          // console.log(response)\r\n          var request = {\r\n            url: 'hardwarekey/login',\r\n            data: passableCredential\r\n          }\r\n          this.$store\r\n            .dispatch(post, request)\r\n            .then(async (rv) => {\r\n              console.log('rv', rv)\r\n              this.status = 'Validate Pass...'\r\n            })\r\n            .catch((e) => {\r\n\r\n            // resolve(false)\r\n            })\r\n        })\r\n        .catch((e) => {\r\n\r\n          // resolve(false)\r\n        })\r\n    },\r\n    /* test function */\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/HardwarkeyTest.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('button',{on:{\"click\":function($event){return _vm.register()}}},[_vm._v(\"Register\")]),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){return _vm.validate()}}},[_vm._v(\"Validate\")]),_vm._v(\" \"),_c('pre',[_vm._v(\" \"+_vm._s(_vm.status)+\" \")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-37dc229b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HardwarkeyTest.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HardwarkeyTest.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HardwarkeyTest.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-37dc229b\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HardwarkeyTest.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HardwarkeyTest.vue\n// module id = null\n// module chunks = ","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 Patrick Gansterer <paroga@paroga.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n(function(global, undefined) { \"use strict\";\r\nvar POW_2_24 = Math.pow(2, -24),\r\n    POW_2_32 = Math.pow(2, 32),\r\n    POW_2_53 = Math.pow(2, 53);\r\n\r\nfunction encode(value) {\r\n  var data = new ArrayBuffer(256);\r\n  var dataView = new DataView(data);\r\n  var lastLength;\r\n  var offset = 0;\r\n\r\n  function ensureSpace(length) {\r\n    var newByteLength = data.byteLength;\r\n    var requiredLength = offset + length;\r\n    while (newByteLength < requiredLength)\r\n      newByteLength *= 2;\r\n    if (newByteLength !== data.byteLength) {\r\n      var oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      var uint32count = (offset + 3) >> 2;\r\n      for (var i = 0; i < uint32count; ++i)\r\n        dataView.setUint32(i * 4, oldDataView.getUint32(i * 4));\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n  function write() {\r\n    offset += lastLength;\r\n  }\r\n  function writeFloat64(value) {\r\n    write(ensureSpace(8).setFloat64(offset, value));\r\n  }\r\n  function writeUint8(value) {\r\n    write(ensureSpace(1).setUint8(offset, value));\r\n  }\r\n  function writeUint8Array(value) {\r\n    var dataView = ensureSpace(value.length);\r\n    for (var i = 0; i < value.length; ++i)\r\n      dataView.setUint8(offset + i, value[i]);\r\n    write();\r\n  }\r\n  function writeUint16(value) {\r\n    write(ensureSpace(2).setUint16(offset, value));\r\n  }\r\n  function writeUint32(value) {\r\n    write(ensureSpace(4).setUint32(offset, value));\r\n  }\r\n  function writeUint64(value) {\r\n    var low = value % POW_2_32;\r\n    var high = (value - low) / POW_2_32;\r\n    var dataView = ensureSpace(8);\r\n    dataView.setUint32(offset, high);\r\n    dataView.setUint32(offset + 4, low);\r\n    write();\r\n  }\r\n  function writeTypeAndLength(type, length) {\r\n    if (length < 24) {\r\n      writeUint8(type << 5 | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8(type << 5 | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8(type << 5 | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8(type << 5 | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8(type << 5 | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n  \r\n  function encodeItem(value) {\r\n    var i;\r\n\r\n    if (value === false)\r\n      return writeUint8(0xf4);\r\n    if (value === true)\r\n      return writeUint8(0xf5);\r\n    if (value === null)\r\n      return writeUint8(0xf6);\r\n    if (value === undefined)\r\n      return writeUint8(0xf7);\r\n  \r\n    switch (typeof value) {\r\n      case \"number\":\r\n        if (Math.floor(value) === value) {\r\n          if (0 <= value && value <= POW_2_53)\r\n            return writeTypeAndLength(0, value);\r\n          if (-POW_2_53 <= value && value < 0)\r\n            return writeTypeAndLength(1, -(value + 1));\r\n        }\r\n        writeUint8(0xfb);\r\n        return writeFloat64(value);\r\n\r\n      case \"string\":\r\n        var utf8data = [];\r\n        for (i = 0; i < value.length; ++i) {\r\n          var charCode = value.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | charCode >> 6);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else if (charCode < 0xd800) {\r\n            utf8data.push(0xe0 | charCode >> 12);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= value.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | charCode >> 18);\r\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        var length;\r\n        if (Array.isArray(value)) {\r\n          length = value.length;\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; ++i)\r\n            encodeItem(value[i]);\r\n        } else if (value instanceof Uint8Array) {\r\n          writeTypeAndLength(2, value.length);\r\n          writeUint8Array(value);\r\n        } else {\r\n          var keys = Object.keys(value);\r\n          length = keys.length;\r\n          writeTypeAndLength(5, length);\r\n          for (i = 0; i < length; ++i) {\r\n            var key = keys[i];\r\n            encodeItem(key);\r\n            encodeItem(value[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n  \r\n  encodeItem(value);\r\n\r\n  if (\"slice\" in data)\r\n    return data.slice(0, offset);\r\n  \r\n  var ret = new ArrayBuffer(offset);\r\n  var retView = new DataView(ret);\r\n  for (var i = 0; i < offset; ++i)\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  return ret;\r\n}\r\n\r\nfunction decode(data, tagger, simpleValue) {\r\n  var dataView = new DataView(data);\r\n  var offset = 0;\r\n  \r\n  if (typeof tagger !== \"function\")\r\n    tagger = function(value) { return value; };\r\n  if (typeof simpleValue !== \"function\")\r\n    simpleValue = function() { return undefined; };\r\n\r\n  function read(value, length) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n  function readArrayBuffer(length) {\r\n    return read(new Uint8Array(data, offset, length), length);\r\n  }\r\n  function readFloat16() {\r\n    var tempArrayBuffer = new ArrayBuffer(4);\r\n    var tempDataView = new DataView(tempArrayBuffer);\r\n    var value = readUint16();\r\n\r\n    var sign = value & 0x8000;\r\n    var exponent = value & 0x7c00;\r\n    var fraction = value & 0x03ff;\r\n    \r\n    if (exponent === 0x7c00)\r\n      exponent = 0xff << 10;\r\n    else if (exponent !== 0)\r\n      exponent += (127 - 15) << 10;\r\n    else if (fraction !== 0)\r\n      return fraction * POW_2_24;\r\n    \r\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n  function readFloat32() {\r\n    return read(dataView.getFloat32(offset), 4);\r\n  }\r\n  function readFloat64() {\r\n    return read(dataView.getFloat64(offset), 8);\r\n  }\r\n  function readUint8() {\r\n    return read(dataView.getUint8(offset), 1);\r\n  }\r\n  function readUint16() {\r\n    return read(dataView.getUint16(offset), 2);\r\n  }\r\n  function readUint32() {\r\n    return read(dataView.getUint32(offset), 4);\r\n  }\r\n  function readUint64() {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n  function readBreak() {\r\n    if (dataView.getUint8(offset) !== 0xff)\r\n      return false;\r\n    offset += 1;\r\n    return true;\r\n  }\r\n  function readLength(additionalInformation) {\r\n    if (additionalInformation < 24)\r\n      return additionalInformation;\r\n    if (additionalInformation === 24)\r\n      return readUint8();\r\n    if (additionalInformation === 25)\r\n      return readUint16();\r\n    if (additionalInformation === 26)\r\n      return readUint32();\r\n    if (additionalInformation === 27)\r\n      return readUint64();\r\n    if (additionalInformation === 31)\r\n      return -1;\r\n    throw \"Invalid length encoding\";\r\n  }\r\n  function readIndefiniteStringLength(majorType) {\r\n    var initialByte = readUint8();\r\n    if (initialByte === 0xff)\r\n      return -1;\r\n    var length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || (initialByte >> 5) !== majorType)\r\n      throw \"Invalid indefinite length element\";\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16data(utf16data, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n      var value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = (value & 0x1f) <<  6\r\n                | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = (value & 0x0f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value = (value & 0x0f) << 18\r\n                | (readUint8() & 0x3f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem() {\r\n    var initialByte = readUint8();\r\n    var majorType = initialByte >> 5;\r\n    var additionalInformation = initialByte & 0x1f;\r\n    var i;\r\n    var length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType))\r\n      throw \"Invalid length\";\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          var elements = [];\r\n          var fullArrayLength = 0;\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n          var fullArray = new Uint8Array(fullArrayLength);\r\n          var fullArrayOffset = 0;\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n          return fullArray;\r\n        }\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        var utf16data = [];\r\n        if (length < 0) {\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\r\n            appendUtf16data(utf16data, length);\r\n        } else\r\n          appendUtf16data(utf16data, length);\r\n        return String.fromCharCode.apply(null, utf16data);\r\n      case 4:\r\n        var retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak())\r\n            retArray.push(decodeItem());\r\n        } else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i)\r\n            retArray[i] = decodeItem();\r\n        }\r\n        return retArray;\r\n      case 5:\r\n        var retObject = {};\r\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r\n          var key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n        return retObject;\r\n      case 6:\r\n        return tagger(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined;\r\n          default:\r\n            return simpleValue(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  var ret = decodeItem();\r\n  if (offset !== data.byteLength)\r\n    throw \"Remaining bytes\";\r\n  return ret;\r\n}\r\n\r\nvar obj = { encode: encode, decode: decode };\r\n\r\nif (typeof define === \"function\" && define.amd)\r\n  define(\"cbor/cbor\", obj);\r\nelse if (typeof module !== 'undefined' && module.exports)\r\n  module.exports = obj;\r\nelse if (!global.CBOR)\r\n  global.CBOR = obj;\r\n\r\n})(this);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cbor-js/cbor.js\n// module id = ozHJ\n// module chunks = 3 5"],"sourceRoot":""}